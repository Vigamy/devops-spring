# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Deploy no DivÃ´nico - Spring

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:  
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 19
      uses: actions/setup-java@v4
      with:
        java-version: '19'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package -DskiptTests --file pom.xml

    - name: Render Deploy Action
      # You may pin to the exact commit or the version.
      # uses: johnbeynon/render-deploy-action@a0588f9aca995a15d69a72cb2bfbf37c12e5b540
      uses: johnbeynon/render-deploy-action@v0.0.8
      with:
        # ID of the service to deploy
        service-id: ${{secrets.SERVICE_ID}}
        # A Render API key
        api-key: ${{secrets.API_KEY}}


      
    - name: Deploy EC2
      run: |
          echo "${{secrets.KEY_EC2_JAVA}}" > private_key && chmod 400 private_key
          ssh -o StrictHostKeyChecking=no -i "private_key" ec2-52-207-155-213.compute-1.amazonaws"
                cd /home/ubuntu/devops-spring &&
                git pull &&
                mvn clean package -DskiptTests &&
                ./executar.sh "
